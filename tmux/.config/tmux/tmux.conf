# ---------------------------------------------------------------
# https://leanpub.com/the-tao-of-tmux/read#appendix-cheatsheets
# tmux show -A
# ---------------------------------------------------------------

### default is 'screen-256color' no italics support
set -g default-terminal "xterm-256color"
### use tmux-256color for termux
# set -g default-terminal "tmux-256color"
### possible colors fix
# set -ga terminal-overrides ",*256col*:Tc"

# enable mouse support for switching panes/windows
set -g mouse on

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 20000

# Increase tmux messages display duration default 750ms
set -g display-time 3000

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Start numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Renumber windows when one is removed.
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 50

# constrain window size to the maximum size of any 
# client connected to *that window*
setw -g aggressive-resize on

# Allow tmux to set the terminal title
set -g set-titles off

# auto window rename
setw -g automatic-rename on
set -g automatic-rename-format "#{?#{==:#{pane_current_command},zsh}"
set -ga automatic-rename-format ",#{b:pane_current_path},#{pane_current_command}}"

# detach tmux when killing a session
set -g detach-on-destroy on

# Vi copypaste mode
setw -g mode-keys vi

# use system clipboard (xclip)
set -g set-clipboard off
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# detect focus events (nvim)
set -g focus-events on

# ---------------------------------------------------------------
#   STYLES 
# ---------------------------------------------------------------

set -g status-position top

# default statusbar colors
set -g status-style default
set -g status-left-style dim
set -g status-right-style dim

# default window title colors
setw -g window-status-format "#F#I•#W"
setw -g window-status-current-format "#F#I•#W"
setw -g window-status-style dim
setw -g window-status-activity-style fg=yellow
setw -g window-status-bell-style fg=red
setw -g window-status-current-style fg=magenta
setw -g window-status-separator "  "

# pane border
set -g pane-border-style fg=brightblack,bg=default
set -g pane-active-border-style fg=magenta,bg=default

# status
set -g status-interval 5
set -g status-justify centre # center align window list
set -g status-left-length 0
set -g status-right-length 0

set -g status-left '#[nodim]#{?client_prefix,#[fg=magenta]▶ ,#[fg=green]▶ }'
set -ga status-left '#[default]#{session_name}'
# set -ga status-left '#[default]#{host}•#(uname -r | cut -c 1-6)'

# set -g status-right '#[default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") '
set -g status-right "%H:%M "
set -ga status-right "#[nodim]#{?client_prefix,#[fg=magenta]●,#[fg=brightred]●}"
set -ga status-right "#[nodim]#{?client_prefix,#[fg=magenta]●,#[fg=brightyellow]●}"
set -ga status-right "#[nodim]#{?client_prefix,#[fg=magenta]●,#[fg=brightgreen]●}"

set -g message-command-style bg=black,fg=green
set -g message-style bg=green,fg=black

# ---------------------------------------------------------------
#   KEY BINDINGS
# ---------------------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# C-b is not acceptable -- Vim uses it
set -g prefix C-Space

# Switch between two most recently used windows
bind Space last-window

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# reload config
bind r source-file "~/.config/tmux/tmux.conf" \; display-message "Config reloaded..."

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# create & name a new window
bind C command-prompt -p "Name of new window: " "new-window -c '#{pane_current_path}' -n '%%'"

# set current path in window split
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# better window split
bind b split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
